import pickle
import re

import pytest
from bson import ObjectId
import datetime
import nbformat
from pathlib import Path


expected_results = {
    "q1": {
        "_id": ObjectId("573a1390f29313caabcd4135"),
        "plot": "Three men hammer on an anvil and pass a bottle of beer around.",
        "genres": ["Short"],
        "runtime": 1,
        "cast": ["Charles Kayser", "John Ott"],
        "num_mflix_comments": 1,
        "title": "Blacksmith Scene",
        "fullplot": "A stationary camera looks at a large anvil with a blacksmith behind it and one on either side. The smith in the middle draws a heated metal rod from the fire, places it on the anvil, and all three begin a rhythmic hammering. After several blows, the metal goes back in the fire. One smith pulls out a bottle of beer, and they each take a swig. Then, out comes the glowing metal and the hammering resumes.",
        "countries": ["USA"],
        "released": datetime.datetime(1893, 5, 9, 0, 0),
        "directors": ["William K.L. Dickson"],
        "rated": "UNRATED",
        "awards": {"wins": 1, "nominations": 0, "text": "1 win."},
        "lastupdated": "2015-08-26 00:03:50.133000000",
        "year": 1893,
        "imdb": {"rating": 6.2, "votes": 1189, "id": 5},
        "type": "movie",
        "tomatoes": {
            "viewer": {"rating": 3, "numReviews": 184, "meter": 32},
            "lastUpdated": datetime.datetime(2015, 6, 28, 18, 34, 9),
        },
    },
    "q2": [
        {
            "_id": ObjectId("573a139df29313caabcf8dd4"),
            "fullplot": "An older man listens to Bill's story about being a callow writer who likes to follow strangers around London, observing them. One day, a glib and self-confident man whom Bill has been following confronts him. He's Cobb, a burglar who takes Bill under his wing and shows him how to break and enter. They burgle a woman's flat; Bill gets intrigued with her (photographs are everywhere in her flat). He follows her and chats her up at a bar owned by her ex-boyfriend, a nasty piece of work who killed someone in her living room with a hammer. Soon Bill is volunteering to do her a favor, which involves a break-in. What does the older man know that Bill doesn't?",
            "imdb": {"rating": 7.6, "votes": 59767, "id": 154506},
            "year": 1998,
            "plot": "A young writer who follows strangers for material meets a thief who takes him under his wing.",
            "genres": ["Mystery", "Thriller"],
            "rated": "R",
            "metacritic": 60,
            "title": "Following",
            "lastupdated": "2015-08-13 00:26:04.177000000",
            "languages": ["English"],
            "writers": ["Christopher Nolan"],
            "type": "movie",
            "tomatoes": {
                "viewer": {"rating": 3.8, "numReviews": 21674, "meter": 85},
                "dvd": datetime.datetime(2001, 12, 11, 0, 0),
                "critic": {"rating": 7.1, "numReviews": 23, "meter": 78},
                "lastUpdated": datetime.datetime(2015, 8, 20, 19, 0, 55),
                "consensus": "Super brief but efficient, Following represents director Christopher Nolan's burgeoning talent in tight filmmaking and hard-edge noir.",
                "rotten": 5,
                "production": "IFC",
                "fresh": 18,
            },
            "poster": "https://m.media-amazon.com/images/M/MV5BMWZmNzk5M2QtOTM3MC00ZTg1LWJlYWMtMGIxZWVjODUwNTEzXkEyXkFqcGdeQXVyNjc1NTYyMjg@._V1_SY1000_SX677_AL_.jpg",
            "num_mflix_comments": 2,
            "released": datetime.datetime(1999, 11, 5, 0, 0),
            "awards": {"wins": 5, "nominations": 4, "text": "5 wins & 4 nominations."},
            "countries": ["UK"],
            "cast": ["Jeremy Theobald", "Alex Haw", "Lucy Russell", "John Nolan"],
            "directors": ["Christopher Nolan"],
            "runtime": 69,
        },
        {
            "_id": ObjectId("573a13a0f29313caabd05acc"),
            "fullplot": "Memento chronicles two separate stories of Leonard, an ex-insurance investigator who can no longer build new memories, as he attempts to find the murderer of his wife, which is the last thing he remembers. One story line moves forward in time while the other tells the story backwards revealing more each time.",
            "imdb": {"rating": 8.5, "votes": 757189, "id": 209144},
            "year": 2000,
            "plot": "A man creates a strange system to help him remember things; so he can hunt for the murderer of his wife without his short-term memory loss being an obstacle.",
            "genres": ["Mystery", "Thriller"],
            "rated": "R",
            "metacritic": 80,
            "title": "Memento",
            "lastupdated": "2015-08-23 00:02:21.657000000",
            "languages": ["English"],
            "writers": [
                "Christopher Nolan (screenplay)",
                'Jonathan Nolan (short story "Memento Mori")',
            ],
            "type": "movie",
            "tomatoes": {
                "website": "http://www.otnemem.com",
                "viewer": {"rating": 4.1, "numReviews": 375899, "meter": 94},
                "dvd": datetime.datetime(2001, 9, 4, 0, 0),
                "critic": {"rating": 8.2, "numReviews": 167, "meter": 92},
                "boxOffice": "$23.8M",
                "consensus": "Christopher Nolan skillfully guides the audience through Memento's fractured narrative, seeping his film in existential dread.",
                "rotten": 13,
                "production": "Newmarket Films",
                "lastUpdated": datetime.datetime(2015, 9, 12, 17, 21, 21),
                "fresh": 154,
            },
            "poster": "https://m.media-amazon.com/images/M/MV5BZTcyNjk1MjgtOWI3Mi00YzQwLWI5MTktMzY4ZmI2NDAyNzYzXkEyXkFqcGdeQXVyNjU0OTQ0OTY@._V1_SY1000_SX677_AL_.jpg",
            "num_mflix_comments": 1,
            "released": datetime.datetime(2001, 5, 25, 0, 0),
            "awards": {
                "wins": 54,
                "nominations": 44,
                "text": "Nominated for 2 Oscars. Another 52 wins & 44 nominations.",
            },
            "countries": ["USA"],
            "cast": [
                "Guy Pearce",
                "Carrie-Anne Moss",
                "Joe Pantoliano",
                "Mark Boone Junior",
            ],
            "directors": ["Christopher Nolan"],
            "runtime": 113,
        },
        {
            "_id": ObjectId("573a13a5f29313caabd1605f"),
            "fullplot": "Sent from the city to investigate the murder of a teenage girl in a small Alaska town, a police detective (Pacino) accidentally shoots his own partner while trying to apprehend a suspect. Instead of admitting his guilt, the detective is given an unexpected alibi, but this \"solution\" only multiplies the emotional complexity and guilt over his partner's death. He's also still got a murder to solve, in addition to the blackmail and framing of an innocent bystander being orchestrated by the man they were chasing. There's also a local detective (Swank) who is conducting her own personal investigation... of his partner's death. Will it all come crashing down on him?",
            "imdb": {"rating": 7.2, "votes": 202616, "id": 278504},
            "year": 2002,
            "plot": "Two Los Angeles homicide detectives are dispatched to a northern town where the sun doesn't set to investigate the methodical murder of a local teen.",
            "genres": ["Mystery", "Thriller"],
            "rated": "R",
            "metacritic": 78,
            "title": "Insomnia",
            "lastupdated": "2015-09-06 00:33:28.057000000",
            "languages": ["English"],
            "writers": [
                "Hillary Seitz (screenplay)",
                "Nikolaj Frobenius",
                "Erik Skjoldbj√®rg",
            ],
            "type": "movie",
            "tomatoes": {
                "website": "http://insomniamovie.warnerbros.com",
                "viewer": {"rating": 3.3, "numReviews": 102945, "meter": 76},
                "dvd": datetime.datetime(2002, 10, 15, 0, 0),
                "critic": {"rating": 7.7, "numReviews": 198, "meter": 92},
                "boxOffice": "$67.2M",
                "consensus": "Driven by Pacino's performance, Insomnia is a smart and riveting psychological drama.",
                "rotten": 16,
                "production": "Warner Bros. Pictures",
                "lastUpdated": datetime.datetime(2015, 9, 13, 9, 59, 23),
                "fresh": 182,
            },
            "poster": "https://m.media-amazon.com/images/M/MV5BYzlkZTEyYjUtMTY5NS00ZjU0LTk5OTYtM2M0ZDg1NmNjMzhkXkEyXkFqcGdeQXVyMTQxNzMzNDI@._V1_SY1000_SX677_AL_.jpg",
            "num_mflix_comments": 1,
            "released": datetime.datetime(2002, 5, 24, 0, 0),
            "awards": {"wins": 1, "nominations": 10, "text": "1 win & 10 nominations."},
            "countries": ["USA", "Canada"],
            "cast": [
                "Al Pacino",
                "Martin Donovan",
                "Oliver 'Ole' Zemen",
                "Hilary Swank",
            ],
            "directors": ["Christopher Nolan"],
            "runtime": 118,
        },
        {
            "_id": ObjectId("573a13aef29313caabd2c349"),
            "plot": "After training with his mentor, Batman begins his war on crime to free the crime-ridden Gotham City from corruption that the Scarecrow and the League of Shadows have cast upon it.",
            "genres": ["Action", "Adventure"],
            "runtime": 140,
            "metacritic": 70,
            "rated": "PG-13",
            "cast": ["Christian Bale", "Michael Caine", "Liam Neeson", "Katie Holmes"],
            "num_mflix_comments": 1,
            "poster": "https://m.media-amazon.com/images/M/MV5BZmUwNGU2ZmItMmRiNC00MjhlLTg5YWUtODMyNzkxODYzMmZlXkEyXkFqcGdeQXVyNTIzOTk5ODM@._V1_SY1000_SX677_AL_.jpg",
            "title": "Batman Begins",
            "fullplot": "When his parents were killed, billionaire playboy Bruce Wayne relocates to Asia when he is mentored by Henri Ducard and Ra's Al Ghul in how to fight evil. When learning about the plan to wipe out evil in Gotham City by Ducard, Bruce prevents this plan from getting any further and heads back to his home. Back in his original surroundings, Bruce adopts the image of a bat to strike fear into the criminals and the corrupt as the icon known as 'Batman'. But it doesn't stay quiet for long.",
            "languages": ["English", "Urdu", "Mandarin"],
            "released": datetime.datetime(2005, 6, 15, 0, 0),
            "directors": ["Christopher Nolan"],
            "writers": [
                "Bob Kane (characters)",
                "David S. Goyer (story)",
                "Christopher Nolan (screenplay)",
                "David S. Goyer (screenplay)",
            ],
            "awards": {
                "wins": 22,
                "nominations": 48,
                "text": "Nominated for 1 Oscar. Another 21 wins & 48 nominations.",
            },
            "lastupdated": "2015-08-31 00:01:54.590000000",
            "year": 2005,
            "imdb": {"rating": 8.3, "votes": 860733, "id": 372784},
            "countries": ["USA", "UK"],
            "type": "movie",
        },
        {
            "_id": ObjectId("573a13b5f29313caabd42722"),
            "fullplot": "Batman raises the stakes in his war on crime. With the help of Lieutenant Jim Gordon and District Attorney Harvey Dent, Batman sets out to dismantle the remaining criminal organizations that plague the city streets. The partnership proves to be effective, but they soon find themselves prey to a reign of chaos unleashed by a rising criminal mastermind known to the terrified citizens of Gotham as The Joker.",
            "imdb": {"rating": 9, "votes": 1495351, "id": 468569},
            "year": 2008,
            "plot": "When the menace known as the Joker wreaks havoc and chaos on the people of Gotham, the caped crusader must come to terms with one of the greatest psychological tests of his ability to fight injustice.",
            "genres": ["Action", "Crime", "Drama"],
            "rated": "PG-13",
            "metacritic": 82,
            "title": "The Dark Knight",
            "lastupdated": "2015-09-10 17:05:27.667000000",
            "languages": ["English", "Mandarin"],
            "writers": [
                "Jonathan Nolan (screenplay)",
                "Christopher Nolan (screenplay)",
                "Christopher Nolan (story)",
                "David S. Goyer (story)",
                "Bob Kane (characters)",
            ],
            "type": "movie",
            "tomatoes": {
                "website": "http://thedarkknight.warnerbros.com/",
                "viewer": {"rating": 4.4, "numReviews": 1818515, "meter": 94},
                "dvd": datetime.datetime(2008, 12, 9, 0, 0),
                "critic": {"rating": 8.6, "numReviews": 314, "meter": 94},
                "boxOffice": "$533.3M",
                "consensus": "Dark, complex and unforgettable, The Dark Knight succeeds not just as an entertaining comic book film, but as a richly thrilling crime saga.",
                "rotten": 19,
                "production": "Warner Bros. Pictures/Legendary",
                "lastUpdated": datetime.datetime(2015, 9, 10, 17, 5, 30),
                "fresh": 295,
            },
            "poster": "https://m.media-amazon.com/images/M/MV5BMTMxNTMwODM0NF5BMl5BanBnXkFtZTcwODAyMTk2Mw@@._V1_SY1000_SX677_AL_.jpg",
            "num_mflix_comments": 426,
            "released": datetime.datetime(2008, 7, 18, 0, 0),
            "awards": {
                "wins": 144,
                "nominations": 106,
                "text": "Won 2 Oscars. Another 142 wins & 106 nominations.",
            },
            "countries": ["USA", "UK"],
            "cast": [
                "Christian Bale",
                "Heath Ledger",
                "Aaron Eckhart",
                "Michael Caine",
            ],
            "directors": ["Christopher Nolan"],
            "runtime": 152,
        },
        {
            "_id": ObjectId("573a13b6f29313caabd45b78"),
            "fullplot": "In the end of the Nineteenth Century, in London, Robert Angier, his beloved wife Julia McCullough and Alfred Borden are friends and assistants of a magician. When Julia accidentally dies during a performance, Robert blames Alfred for her death and they become enemies. Both become famous and rival magicians, sabotaging the performance of the other on the stage. When Alfred performs a successful trick, Robert becomes obsessed trying to disclose the secret of his competitor with tragic consequences.",
            "imdb": {"rating": 8.5, "votes": 743761, "id": 482571},
            "year": 2006,
            "plot": "Two stage magicians engage in competitive one-upmanship in an attempt to create the ultimate stage illusion.",
            "genres": ["Drama", "Mystery", "Thriller"],
            "rated": "PG-13",
            "metacritic": 66,
            "title": "The Prestige",
            "lastupdated": "2015-09-05 00:59:29.823000000",
            "languages": ["English"],
            "writers": [
                "Jonathan Nolan (screenplay)",
                "Christopher Nolan (screenplay)",
                "Christopher Priest (novel)",
            ],
            "type": "movie",
            "tomatoes": {
                "website": "http://touchstone.movies.go.com/index.html?dlink=prestige",
                "viewer": {"rating": 4, "numReviews": 545772, "meter": 92},
                "dvd": datetime.datetime(2007, 2, 20, 0, 0),
                "critic": {"rating": 7.1, "numReviews": 188, "meter": 76},
                "boxOffice": "$53.0M",
                "consensus": "Full of twists and turns, The Prestige is a dazzling period piece that never stops challenging the audience.",
                "rotten": 46,
                "production": "Buena Vista Pictures",
                "lastUpdated": datetime.datetime(2015, 9, 12, 17, 33, 15),
                "fresh": 142,
            },
            "poster": "https://m.media-amazon.com/images/M/MV5BMjA4NDI0MTIxNF5BMl5BanBnXkFtZTYwNTM0MzY2._V1_SY1000_SX677_AL_.jpg",
            "num_mflix_comments": 1,
            "released": datetime.datetime(2006, 10, 20, 0, 0),
            "awards": {
                "wins": 9,
                "nominations": 27,
                "text": "Nominated for 2 Oscars. Another 7 wins & 27 nominations.",
            },
            "countries": ["USA", "UK"],
            "cast": ["Hugh Jackman", "Christian Bale", "Michael Caine", "Piper Perabo"],
            "directors": ["Christopher Nolan"],
            "runtime": 130,
        },
        {
            "_id": ObjectId("573a13b9f29313caabd4ddff"),
            "fullplot": "In the near future, Earth has been devastated by drought and famine, causing a scarcity in food and extreme changes in climate. When humanity is facing extinction, a mysterious rip in the space-time continuum is discovered, giving mankind the opportunity to widen its lifespan. A group of explorers must travel beyond our solar system in search of a planet that can sustain life. The crew of the Endurance are required to think bigger and go further than any human in history as they embark on an interstellar voyage into the unknown. Coop, the pilot of the Endurance, must decide between seeing his children again and the future of the human race.",
            "imdb": {"rating": 8.7, "votes": 699518, "id": 816692},
            "year": 2014,
            "plot": "A team of explorers travel through a wormhole in space in an attempt to ensure humanity's survival.",
            "genres": ["Adventure", "Drama", "Sci-Fi"],
            "rated": "PG-13",
            "metacritic": 74,
            "title": "Interstellar",
            "lastupdated": "2015-08-18 00:04:49.173000000",
            "languages": ["English"],
            "writers": ["Jonathan Nolan", "Christopher Nolan"],
            "type": "movie",
            "tomatoes": {
                "website": "http://www.InterstellarMovie.com/",
                "viewer": {"rating": 4.1, "numReviews": 163082, "meter": 85},
                "dvd": datetime.datetime(2015, 3, 31, 0, 0),
                "critic": {"rating": 7, "numReviews": 293, "meter": 72},
                "lastUpdated": datetime.datetime(2015, 9, 10, 17, 8, 37),
                "consensus": "Interstellar represents more of the thrilling, thought-provoking, and visually resplendent filmmaking moviegoers have come to expect from writer-director Christopher Nolan, even if its intellectual reach somewhat exceeds its grasp.",
                "rotten": 83,
                "production": "Paramount Pictures",
                "fresh": 210,
            },
            "poster": "https://m.media-amazon.com/images/M/MV5BZjdkOTU3MDktN2IxOS00OGEyLWFmMjktY2FiMmZkNWIyODZiXkEyXkFqcGdeQXVyMTMxODk2OTU@._V1_SY1000_SX677_AL_.jpg",
            "num_mflix_comments": 2,
            "released": datetime.datetime(2014, 11, 7, 0, 0),
            "awards": {
                "wins": 45,
                "nominations": 100,
                "text": "Won 1 Oscar. Another 44 wins & 100 nominations.",
            },
            "countries": ["USA", "UK", "Canada"],
            "cast": [
                "Ellen Burstyn",
                "Matthew McConaughey",
                "Mackenzie Foy",
                "John Lithgow",
            ],
            "directors": ["Christopher Nolan"],
            "runtime": 169,
        },
        {
            "_id": ObjectId("573a13c4f29313caabd6cc80"),
            "fullplot": "Despite his tarnished reputation after the events of The Dark Knight, in which he took the rap for Dent's crimes, Batman feels compelled to intervene to assist the city and its police force which is struggling to cope with Bane's plans to destroy the city.",
            "imdb": {"rating": 8.5, "votes": 1004805, "id": 1345836},
            "year": 2012,
            "plot": "Eight years after the Joker's reign of anarchy, the Dark Knight is forced to return from his imposed exile to save Gotham City from the brutal guerrilla terrorist Bane with the help of the enigmatic Catwoman.",
            "genres": ["Action", "Thriller"],
            "rated": "PG-13",
            "metacritic": 78,
            "title": "The Dark Knight Rises",
            "lastupdated": "2015-08-22 00:03:50.157000000",
            "languages": ["English"],
            "writers": [
                "Jonathan Nolan (screenplay)",
                "Christopher Nolan (screenplay)",
                "Christopher Nolan (story)",
                "David S. Goyer (story)",
                "Bob Kane (characters)",
            ],
            "type": "movie",
            "tomatoes": {
                "website": "http://www.thedarkknightrises.com/",
                "viewer": {"rating": 4.3, "numReviews": 1203596, "meter": 90},
                "dvd": datetime.datetime(2012, 12, 3, 0, 0),
                "critic": {"rating": 8, "numReviews": 327, "meter": 87},
                "boxOffice": "$448.1M",
                "consensus": "The Dark Knight Rises is an ambitious, thoughtful, and potent action film that concludes Christopher Nolan's franchise in spectacular fashion.",
                "rotten": 44,
                "production": "Warner Bros. Pictures",
                "lastUpdated": datetime.datetime(2015, 9, 12, 17, 27, 41),
                "fresh": 283,
            },
            "poster": "https://m.media-amazon.com/images/M/MV5BMTk4ODQzNDY3Ml5BMl5BanBnXkFtZTcwODA0NTM4Nw@@._V1_SY1000_SX677_AL_.jpg",
            "num_mflix_comments": 410,
            "released": datetime.datetime(2012, 7, 20, 0, 0),
            "awards": {
                "wins": 46,
                "nominations": 86,
                "text": "Nominated for 1 BAFTA Film Award. Another 45 wins & 86 nominations.",
            },
            "countries": ["USA", "UK"],
            "cast": [
                "Christian Bale",
                "Gary Oldman",
                "Tom Hardy",
                "Joseph Gordon-Levitt",
            ],
            "directors": ["Christopher Nolan"],
            "runtime": 165,
        },
        {
            "_id": ObjectId("573a13c5f29313caabd6ee61"),
            "fullplot": "Dom Cobb is a skilled thief, the absolute best in the dangerous art of extraction, stealing valuable secrets from deep within the subconscious during the dream state, when the mind is at its most vulnerable. Cobb's rare ability has made him a coveted player in this treacherous new world of corporate espionage, but it has also made him an international fugitive and cost him everything he has ever loved. Now Cobb is being offered a chance at redemption. One last job could give him his life back but only if he can accomplish the impossible-inception. Instead of the perfect heist, Cobb and his team of specialists have to pull off the reverse: their task is not to steal an idea but to plant one. If they succeed, it could be the perfect crime. But no amount of careful planning or expertise can prepare the team for the dangerous enemy that seems to predict their every move. An enemy that only Cobb could have seen coming.",
            "imdb": {"rating": 8.8, "votes": 1294646, "id": 1375666},
            "year": 2010,
            "plot": "A thief who steals corporate secrets through use of dream-sharing technology is given the inverse task of planting an idea into the mind of a CEO.",
            "genres": ["Action", "Mystery", "Sci-Fi"],
            "rated": "PG-13",
            "metacritic": 74,
            "title": "Inception",
            "lastupdated": "2015-09-12 00:29:01.430000000",
            "languages": ["English", "Japanese", "French"],
            "writers": ["Christopher Nolan"],
            "type": "movie",
            "tomatoes": {
                "website": "http://inceptionmovie.warnerbros.com/",
                "viewer": {"rating": 4.2, "numReviews": 561365, "meter": 91},
                "dvd": datetime.datetime(2010, 12, 7, 0, 0),
                "critic": {"rating": 8.1, "numReviews": 326, "meter": 86},
                "boxOffice": "$292.6M",
                "consensus": "Smart, innovative, and thrilling, Inception is that rare summer blockbuster that succeeds viscerally as well as intellectually.",
                "rotten": 45,
                "production": "Warner Bros. Pictures",
                "lastUpdated": datetime.datetime(2015, 9, 12, 17, 13, 32),
                "fresh": 281,
            },
            "poster": "https://m.media-amazon.com/images/M/MV5BMjAxMzY3NjcxNF5BMl5BanBnXkFtZTcwNTI5OTM0Mw@@._V1_SY1000_SX677_AL_.jpg",
            "num_mflix_comments": 1,
            "released": datetime.datetime(2010, 7, 16, 0, 0),
            "awards": {
                "wins": 162,
                "nominations": 172,
                "text": "Won 4 Oscars. Another 158 wins & 172 nominations.",
            },
            "countries": ["USA", "UK"],
            "cast": [
                "Leonardo DiCaprio",
                "Joseph Gordon-Levitt",
                "Ellen Page",
                "Tom Hardy",
            ],
            "directors": ["Christopher Nolan"],
            "runtime": 148,
        },
    ],
    "q3": [
        {
            "_id": ObjectId("59b99db4cfa9a34dcd7885b6"),
            "name": "Ned Stark",
            "email": "sean_bean@gameofthron.es",
            "password": "$2b$12$UREFwsRUoyF0CRqGNK0LzO0HM/jLhgUCNNIJ9RJAqMUQ74crlJ1Vu",
        },
        {
            "_id": ObjectId("59b99db4cfa9a34dcd7885b7"),
            "name": "Robert Baratheon",
            "email": "mark_addy@gameofthron.es",
            "password": "$2b$12$yGqxLG9LZpXA2xVDhuPnSOZd.VURVkz7wgOLY3pnO0s7u2S1ZO32y",
        },
        {
            "_id": ObjectId("59b99db5cfa9a34dcd7885b8"),
            "name": "Jaime Lannister",
            "email": "nikolaj_coster-waldau@gameofthron.es",
            "password": "$2b$12$6vz7wiwO.EI5Rilvq1zUc./9480gb1uPtXcahDxIadgyC3PS8XCUK",
        },
        {
            "_id": ObjectId("59b99db5cfa9a34dcd7885b9"),
            "name": "Catelyn Stark",
            "email": "michelle_fairley@gameofthron.es",
            "password": "$2b$12$fiaTH5Sh1zKNFX2i/FTEreWGjxoJxvmV7XL.qlfqCr8CwOxK.mZWS",
        },
        {
            "_id": ObjectId("59b99db6cfa9a34dcd7885ba"),
            "name": "Cersei Lannister",
            "email": "lena_headey@gameofthron.es",
            "password": "$2b$12$FExjgr7CLhNCa.oUsB9seub8mqcHzkJCFZ8heMc8CeIKOZfeTKP8m",
        },
    ],
    "q4": {
        "_id": ObjectId("573a1396f29313caabce4a9a"),
        "fullplot": "When the aging head of a famous crime family decides to transfer his position to one of his subalterns, a series of unfortunate events start happening to the family, and a war begins between all the well-known families leading to insolence, deportation, murder and revenge, and ends with the favorable successor being finally chosen.",
        "imdb": {"rating": 9.2, "votes": 1038358, "id": 68646},
        "year": 1972,
        "plot": "The aging patriarch of an organized crime dynasty transfers control of his clandestine empire to his reluctant son.",
        "genres": ["Crime", "Drama"],
        "rated": "R",
        "metacritic": 100,
        "title": "The Godfather",
        "lastupdated": "2015-09-02 00:08:23.680000000",
        "languages": ["English", "Italian", "Latin"],
        "writers": [
            "Mario Puzo (screenplay)",
            "Francis Ford Coppola (screenplay)",
            "Mario Puzo (novel)",
        ],
        "type": "movie",
        "tomatoes": {
            "website": "http://www.thegodfather.com",
            "viewer": {"rating": 4.4, "numReviews": 725773, "meter": 98},
            "dvd": datetime.datetime(2001, 10, 9, 0, 0),
            "critic": {"rating": 9.2, "numReviews": 84, "meter": 99},
            "lastUpdated": datetime.datetime(2015, 9, 12, 17, 15, 13),
            "consensus": "One of Hollywood's greatest critical and commercial successes, The Godfather gets everything right; not only did the movie transcend expectations, it established new benchmarks for American cinema.",
            "rotten": 1,
            "production": "Paramount Pictures",
            "fresh": 83,
        },
        "poster": "https://m.media-amazon.com/images/M/MV5BM2MyNjYxNmUtYTAwNi00MTYxLWJmNWYtYzZlODY3ZTk3OTFlXkEyXkFqcGdeQXVyNzkwMjQ5NzM@._V1_SY1000_SX677_AL_.jpg",
        "num_mflix_comments": 380,
        "released": datetime.datetime(1972, 3, 24, 0, 0),
        "awards": {
            "wins": 33,
            "nominations": 19,
            "text": "Won 3 Oscars. Another 30 wins & 19 nominations.",
        },
        "countries": ["USA"],
        "cast": ["Marlon Brando", "Al Pacino", "James Caan", "Richard S. Castellano"],
        "directors": ["Francis Ford Coppola"],
        "runtime": 175,
    },
    "q5": 23539,
    "q6": 13103,
    "q7": 7024,
    "q8": 279,
    "q9": 3722,
    "q10": [
        {"title": "(T)ERROR"},
        {"title": "11 Minutes"},
        {"title": "13 Minutes"},
        {"title": "3 1/2 Minutes, Ten Bullets"},
        {"title": "45 Years"},
        {"title": "6 Years"},
        {"title": "600 Millas"},
        {"title": "7 Chinese Brothers"},
        {"title": "A Bigger Splash"},
        {"title": "A Brave Heart: The Lizzie Velasquez Story"},
        {"title": "A Country Called Home"},
        {"title": "A Horse for Summer"},
        {"title": "A Perfect Day"},
        {"title": "A Sinner in Mecca"},
        {"title": "A Sunday Kind of Love"},
        {"title": "A Tale of Love and Darkness"},
        {"title": "A War"},
        {"title": "A cambio de nada"},
        {"title": "Above and Below"},
        {"title": "Ad Inexplorata"},
        {"title": "Adam Curtis: Bitter Lake"},
        {"title": "Adama"},
        {"title": "Admiral"},
        {"title": "Advantageous"},
        {"title": "Aferim!"},
        {"title": "AfterDeath"},
        {"title": "Alias Mar√®a"},
        {"title": "Alice in Earnestland"},
        {"title": "All Eyes and Ears"},
        {"title": "Aloha"},
        {"title": "American Hostage"},
        {"title": "Amy"},
        {"title": "An"},
        {"title": "An Italian Name"},
        {"title": "Anomalisa"},
        {"title": "Another World"},
        {"title": "Ant-Man"},
        {"title": "Applesauce"},
        {"title": "April and the Extraordinary World"},
        {"title": "Arabian Nights: Volume 1 - The Restless One"},
        {"title": "Armi el√®√®!"},
        {"title": "As We Were Dreaming"},
        {"title": "Ashby"},
        {"title": "Assassination Classroom"},
        {"title": "Autism in Love"},
        {"title": "Ava's Possessions"},
        {"title": "Ave Maria"},
        {"title": "Avengers: Age of Ultron"},
        {"title": "Awaken"},
        {"title": "Ayanda and the Mechanic"},
        {"title": "B-Movie: Lust & Sound in West-Berlin 1979-1989"},
        {"title": "Babai"},
        {"title": "Bang Gang (A Modern Love Story)"},
        {"title": "Batkid Begins"},
        {"title": "Be My Cat: A Film for Anne"},
        {"title": "Beasts of No Nation"},
        {"title": "Being Evel"},
        {"title": "Bessie"},
        {"title": "Best of Enemies"},
        {"title": "Beyond the Fear"},
        {"title": "Bitcoin: The End of Money as We Know It"},
        {"title": "Bitva za Sevastopol"},
        {"title": "Black Mountain Poets"},
        {"title": "Blackhat"},
        {"title": "Bloed, Zweet & Tranen"},
        {"title": "Blood of My Blood"},
        {"title": "Body"},
        {"title": "Body"},
        {"title": "Bombay Velvet"},
        {"title": "Brand New-U"},
        {"title": "Brand: A Second Coming"},
        {"title": "Breaking a Monster"},
        {"title": "Bridgend"},
        {"title": "Butterfly"},
        {"title": "Call Me Lucky"},
        {"title": "Carol"},
        {"title": "Carte Blanche"},
        {"title": "Cartel Land"},
        {"title": "Cash Only"},
        {"title": "Catching the Sun"},
        {"title": "Caught"},
        {"title": "Cemetery of Splendour"},
        {"title": "Chasuke's Journey"},
        {"title": "Chevalier"},
        {"title": "Chronic"},
        {"title": "Chronicle of a Blood Merchant"},
        {"title": "Chuck Norris vs Communism"},
        {"title": "Cinderella"},
        {"title": "Circle"},
        {"title": "City of Gold"},
        {"title": "Clean Hands"},
        {"title": "Cobain: Montage of Heck"},
        {"title": "Coin Locker Girl"},
        {"title": "Como funcionan casi todas las cosas"},
        {"title": "Convenience"},
        {"title": "Cop Car"},
        {"title": "Cosmos"},
        {"title": "Courted"},
        {"title": "Creative Control"},
        {"title": "Crocodile Gennadiy"},
        {"title": "Crumbs"},
        {"title": "Crush the Skull"},
        {"title": "Dark Horse"},
        {"title": "Day One"},
        {"title": "De Surprise"},
        {"title": "Deathgasm"},
        {"title": "Deep Web"},
        {"title": "Dennis Rodman's Big Bang in PyongYang"},
        {"title": "Der Bunker"},
        {"title": "Der Nachtmahr"},
        {"title": "Desde all√®"},
        {"title": "Desierto"},
        {"title": "Dhanak"},
        {"title": "Dheepan"},
        {"title": "Diary of a Chambermaid"},
        {"title": "Disorder"},
        {"title": "Divine Access"},
        {"title": "Dope"},
        {"title": "Dragon Blade"},
        {"title": "Dreamcatcher"},
        {"title": "Drunk Stoned Brilliant Dead: The Story of the National Lampoon"},
        {"title": "Dude Bro Party Massacre III"},
        {"title": "D√®grad√®"},
        {"title": "Eadweard"},
        {"title": "Eisenstein in Guanajuato"},
        {"title": "Embers"},
        {"title": "Embrace of the Serpent"},
        {"title": "Emelie"},
        {"title": "Enklava"},
        {"title": "Entertainment"},
        {"title": "Equals"},
        {"title": "Escape"},
        {"title": "Everything Before Us"},
        {"title": "Evolution"},
        {"title": "Ex Machina"},
        {"title": "Exeter"},
        {"title": "Extraordinary Tales"},
        {"title": "Fantastic Four"},
        {"title": "Far from the Madding Crowd"},
        {"title": "Felices 140"},
        {"title": "Fifty Shades of Grey"},
        {"title": "Finders Keepers"},
        {"title": "Flocken"},
        {"title": "Fly Away Solo"},
        {"title": "For Grace"},
        {"title": "Fourth Man Out"},
        {"title": "Frame by Frame"},
        {"title": "Francofonia"},
        {"title": "Frankenstein"},
        {"title": "Frau M√®ller muss weg!"},
        {"title": "Freistatt"},
        {"title": "Furious 7"},
        {"title": "Gangnam Blues"},
        {"title": "Gayby Baby"},
        {"title": "Ghoul"},
        {"title": "Girl on the Edge"},
        {"title": "Gold Coast"},
        {"title": "Good Ol' Boy"},
        {"title": "Green Room"},
        {"title": "Hacker's Game"},
        {"title": "Hallway"},
        {"title": "Hector"},
        {"title": "Heil"},
        {"title": "Hello, My Name Is Doris"},
        {"title": "Hitchcock/Truffaut"},
        {"title": "Ho ucciso Napoleone"},
        {"title": "Holding the Man"},
        {"title": "Home Care"},
        {"title": "Homeland (Iraq Year Zero)"},
        {"title": "Homies"},
        {"title": "Hoovey"},
        {"title": "Hot Girls Wanted"},
        {"title": "Hot Pursuit"},
        {"title": "How to Change the World"},
        {"title": "How to Win at Checkers (Every Time)"},
        {"title": "I Am Michael"},
        {"title": "I Am Thor"},
        {"title": "I Smile Back"},
        {"title": "I'll See You in My Dreams"},
        {"title": "III"},
        {"title": "Ice and the Sky"},
        {"title": "Im Sommer wohnt er unten"},
        {"title": "In Transit"},
        {"title": "In the Grayscale"},
        {"title": "India's Daughter"},
        {"title": "Ingrid Bergman in Her Own Words"},
        {"title": "Inside Out"},
        {"title": "Insidious: Chapter 3"},
        {"title": "Insurgent"},
        {"title": "It's Already Tomorrow in Hong Kong"},
        {"title": "It's Me, Hilary: The Man Who Drew Eloise"},
        {"title": "Italiano medio"},
        {"title": "Ivy"},
        {"title": "Ixcanul Volcano"},
        {"title": "Jackrabbit"},
        {"title": "James White"},
        {"title": "Jeruzalem"},
        {"title": "Journey to the Shore"},
        {"title": "Jupiter Ascending"},
        {"title": "Jupiter Ascending"},
        {"title": "Jurassic World"},
        {"title": "Just Jim"},
        {"title": "Kaili Blues"},
        {"title": "Kept Woman"},
        {"title": "Killing Jesus"},
        {"title": "King Jack"},
        {"title": "Knight of Cups"},
        {"title": "Krisha"},
        {"title": "Kung Fury"},
        {"title": "La scelta"},
        {"title": "Lamb"},
        {"title": "Land and Shade"},
        {"title": "Landmine Goes Click"},
        {"title": "Larry Kramer in Love and Anger"},
        {"title": "Last Cab to Darwin"},
        {"title": "Latin Lover"},
        {"title": "Len and Company"},
        {"title": "Les cowboys"},
        {"title": "Les oiseaux de passage"},
        {"title": "Limonata"},
        {"title": "Listen to Me Marlon"},
        {"title": "Live from New York!"},
        {"title": "Liza, the Fox-Fairy"},
        {"title": "Long Way North"},
        {"title": "Looking for Grace"},
        {"title": "Lost and Beautiful"},
        {"title": "Louder Than Bombs"},
        {"title": "Louis C.K.: Live at the Comedy Store"},
        {"title": "Love"},
        {"title": "Lovemilla"},
        {"title": "Macbeth"},
        {"title": "Mad Max: Fury Road"},
        {"title": "Maggie"},
        {"title": "Magic Mike XXL"},
        {"title": "Man Down"},
        {"title": "Manhattan Romance"},
        {"title": "Manoman"},
        {"title": "Manson Family Vacation"},
        {"title": "Marguerite"},
        {"title": "Marguerite & Julien"},
        {"title": "McFarland, USA"},
        {"title": "Me Him Her"},
        {"title": "Me and Earl and the Dying Girl"},
        {"title": "Meadowland"},
        {"title": "Mediterranea"},
        {"title": "Men & Chicken"},
        {"title": "Men Go to Battle"},
        {"title": "Meru"},
        {"title": "Mia Madre"},
        {"title": "Misery Loves Comedy"},
        {"title": "Miss Hokusai"},
        {"title": "Miss India America"},
        {"title": "Molly Moon and the Incredible Book of Hypnotism"},
        {"title": "Mon roi"},
        {"title": "Monkey King: Hero Is Back"},
        {"title": "Most Likely to Succeed"},
        {"title": "Mountains May Depart"},
        {"title": "Mr. Holmes"},
        {"title": "Much Loved"},
        {"title": "Mustang"},
        {"title": "My Golden Days"},
        {"title": "My Lonely Me"},
        {"title": "My Skinny Sister"},
        {"title": "Nachthelle"},
        {"title": "Nahid"},
        {"title": "Naked Among Wolves"},
        {"title": "Nasty Baby"},
        {"title": "Naz & Maalik"},
        {"title": "Night Owls"},
        {"title": "No Home Movie"},
        {"title": "No Stranger Than Love"},
        {"title": "Nobody Wants the Night"},
        {"title": "Noi e la Giulia"},
        {"title": "Office"},
        {"title": "Oliver's Deal"},
        {"title": "One Floor Below"},
        {"title": "One and Two"},
        {"title": "Only the Dead"},
        {"title": "Our Little Sister"},
        {"title": "Our Loved Ones"},
        {"title": "Out of My Hand"},
        {"title": "Outliving Emily"},
        {"title": "OzLand"},
        {"title": "Packed In A Trunk: The Lost Art of Edith Lake Wilkinson"},
        {"title": "Paper Towns"},
        {"title": "Paren s nashego kladbishcha"},
        {"title": "Partisan"},
        {"title": "Paternity Leave"},
        {"title": "Paul Blart: Mall Cop 2"},
        {"title": "Paulina"},
        {"title": "Peace Officer"},
        {"title": "People Places Things"},
        {"title": "Petting Zoo"},
        {"title": "Pionery-geroi"},
        {"title": "Pitch Perfect 2"},
        {"title": "Pixels"},
        {"title": "Polycarp"},
        {"title": "Port of Call"},
        {"title": "Prince"},
        {"title": "Queen of Earth"},
        {"title": "Queen of the Desert"},
        {"title": "Racing Extinction"},
        {"title": "Rams"},
        {"title": "Ratter"},
        {"title": "Remember"},
        {"title": "Requisitos para ser una persona normal"},
        {"title": "Results"},
        {"title": "Right Now, Wrong Then"},
        {"title": "Rolling Papers"},
        {"title": "Room"},
        {"title": "Rosenwald"},
        {"title": "Safelight"},
        {"title": "Sam"},
        {"title": "San Andreas"},
        {"title": "Scherzo Diabolico"},
        {"title": "Schneider vs. Bax"},
        {"title": "Scouts Guide to the Zombie Apocalypse"},
        {"title": "Se Dio vuole"},
        {"title": "Seashore"},
        {"title": "Sei mai stata sulla luna?"},
        {"title": "Seoul Searching"},
        {"title": "Shaun the Sheep Movie"},
        {"title": "Sherpa"},
        {"title": "Shut In"},
        {"title": "Si accettano miracoli"},
        {"title": "Sicario"},
        {"title": "Sindrom Petrushki"},
        {"title": "Sleeping Giant"},
        {"title": "Sleeping with Other People"},
        {"title": "Slow West"},
        {"title": "Somewhere Only We Know"},
        {"title": "Son of Mine"},
        {"title": "Son of Saul"},
        {"title": "Song of Lahore"},
        {"title": "Songs My Brothers Taught Me"},
        {"title": "Spare Parts"},
        {"title": "Spy"},
        {"title": "Stealing Cars"},
        {"title": "Steve McQueen: The Man & Le Mans"},
        {"title": "Stockholm, Pennsylvania"},
        {"title": "Strana Oz"},
        {"title": "Strangerland"},
        {"title": "Stung"},
        {"title": "Sucker"},
        {"title": "Sunny in the Dark"},
        {"title": "SuperBob"},
        {"title": "Sweet Micky for President"},
        {"title": "Sworn Virgin"},
        {"title": "Swung"},
        {"title": "Synchronicity"},
        {"title": "Tab Hunter Confidential"},
        {"title": "Tale of Tales"},
        {"title": "Tangerine"},
        {"title": "Tanna"},
        {"title": "Taxi"},
        {"title": "Techo y comida"},
        {"title": "Terminator Genisys"},
        {"title": "Territory"},
        {"title": "Tetarti 04:45"},
        {"title": "Thank You for Playing"},
        {"title": "The 33"},
        {"title": "The Adderall Diaries"},
        {"title": "The Age of Adaline"},
        {"title": "The Assassin"},
        {"title": "The Babushkas of Chernobyl"},
        {"title": "The Benefactor"},
        {"title": "The Birth of Sak√®"},
        {"title": "The Black Panthers: Vanguard of the Revolution"},
        {"title": "The Blue Hour"},
        {"title": "The Boy"},
        {"title": "The Boy Next Door"},
        {"title": "The Boy and the Beast"},
        {"title": "The Brand New Testament"},
        {"title": "The Break-In"},
        {"title": "The Bronze"},
        {"title": "The Casual Vacancy"},
        {"title": "The Childhood of a Leader"},
        {"title": "The Chinese Mayor"},
        {"title": "The Clan"},
        {"title": "The Club"},
        {"title": "The Confines"},
        {"title": "The Corpse of Anna Fritz"},
        {"title": "The D Train"},
        {"title": "The DUFF"},
        {"title": "The Danish Girl"},
        {"title": "The Daughter"},
        {"title": "The Deposit"},
        {"title": "The Diary of a Teenage Girl"},
        {"title": "The Ecstasy of Wilko Johnson"},
        {"title": "The End of the Tour"},
        {"title": "The Escort"},
        {"title": "The Final Girls"},
        {"title": "The Forbidden Room"},
        {"title": "The Ghost and the Whale"},
        {"title": "The Girl in the Book"},
        {"title": "The Great Alone"},
        {"title": "The Grief of Others"},
        {"title": "The Here After"},
        {"title": "The High Sun"},
        {"title": "The Hoarder"},
        {"title": "The Hunting Ground"},
        {"title": "The Invitation"},
        {"title": "The Jinx: The Life and Deaths of Robert Durst"},
        {"title": "The Laundryman"},
        {"title": "The Legend of Barney Thomson"},
        {"title": "The Lobster"},
        {"title": "The Longest Ride"},
        {"title": "The Magic Mountain"},
        {"title": "The Man in the Wall"},
        {"title": "The Master Plan"},
        {"title": "The Measure of a Man"},
        {"title": "The Midwife"},
        {"title": "The Nightmare"},
        {"title": "The Other Side"},
        {"title": "The Overnight"},
        {"title": "The Pearl Button"},
        {"title": "The Real Miyagi"},
        {"title": "The Red Spider"},
        {"title": "The Russian Woodpecker"},
        {"title": "The Sea of Trees"},
        {"title": "The Second Mother"},
        {"title": "The Seventh Fire"},
        {"title": "The Shaman"},
        {"title": "The Snake Brothers"},
        {"title": "The SpongeBob Movie: Sponge Out of Water"},
        {"title": "The Stanford Prison Experiment"},
        {"title": "The Summer of Sangaile"},
        {"title": "The Survivalist"},
        {"title": "The Treasure"},
        {"title": "The Visit"},
        {"title": "The Wait"},
        {"title": "The Wakhan Front"},
        {"title": "The Wedding Ringer"},
        {"title": "The Witch"},
        {"title": "The Wolfpack"},
        {"title": "They Look Like People"},
        {"title": "This Isn't Funny"},
        {"title": "Those People"},
        {"title": "Thought Crimes: The Case of the Cannibal Cop"},
        {"title": "Ti mene nosis"},
        {"title": "Tikkun"},
        {"title": "Tired Moonlight"},
        {"title": "Tom Swift and His Electric Rifle"},
        {"title": "Tomorrowland"},
        {"title": "Too Late"},
        {"title": "Tracers"},
        {"title": "TransFatty Lives"},
        {"title": "True Story"},
        {"title": "Tryapichnyy soyuz"},
        {"title": "Turbo Kid"},
        {"title": "Twinsters"},
        {"title": "Two Friends"},
        {"title": "Tyke Elephant Outlaw"},
        {"title": "Umrika"},
        {"title": "Un monstruo de mil cabezas"},
        {"title": "Uncanny"},
        {"title": "Uncle John"},
        {"title": "Uncle Kent 2"},
        {"title": "Under Electric Clouds"},
        {"title": "Unexpected"},
        {"title": "Valley of Love"},
        {"title": "Very Semi-Serious"},
        {"title": "Viaje"},
        {"title": "Victoria"},
        {"title": "Virgin Mountain"},
        {"title": "War Pigs"},
        {"title": "We Are Still Here"},
        {"title": "Welcome to Happiness"},
        {"title": "Welcome to Leith"},
        {"title": "Western"},
        {"title": "What's Between Us"},
        {"title": "White Out, Black In"},
        {"title": "Whitney"},
        {"title": "With This Ring"},
        {"title": "Wolf Hall"},
        {"title": "Wolf Totem"},
        {"title": "Wolf Warrior"},
        {"title": "Wondrous Boccaccio"},
        {"title": "World of Tomorrow"},
        {"title": "Yosemite"},
        {"title": "You're Ugly Too"},
        {"title": "Youth"},
        {"title": "Z for Zachariah"},
        {"title": "Zurich"},
    ],
    "q11": [
        {
            "_id": ObjectId("5b7327c34a68c3f7a7bcb1d3"),
            "name": "sxkybvzb6",
            "email": "vtz4prjvb@g622o.1yk",
            "movie_id": ObjectId("573a13eff29313caabdd82f3"),
            "text": "fazzlebizzle",
            "date": datetime.datetime(2018, 8, 14, 15, 5, 3, 142000),
        },
        {
            "_id": ObjectId("5b7327724a68c3f7a7bcb1ae"),
            "name": "jjjdmntww",
            "email": "h90xxa9b0@gn3q7.7th",
            "movie_id": ObjectId("573a13eff29313caabdd82f3"),
            "text": "feefee",
            "date": datetime.datetime(2018, 8, 14, 15, 3, 14, 306000),
        },
        {
            "_id": ObjectId("5b7326fd4a68c3f7a7bcb188"),
            "name": "yznjm1yul",
            "email": "rio72go4u@wztfh.ep0",
            "movie_id": ObjectId("573a13eff29313caabdd82f3"),
            "text": "feefee",
            "date": datetime.datetime(2018, 8, 14, 15, 1, 16, 716000),
        },
        {
            "_id": ObjectId("5b7326bd4a68c3f7a7bcb15f"),
            "name": "sg1u6swo4",
            "email": "gs4jr54ar@6gvpw.ok0",
            "movie_id": ObjectId("573a13eff29313caabdd82f3"),
            "text": "fazzlebizzle",
            "date": datetime.datetime(2018, 8, 14, 15, 0, 25, 211000),
        },
        {
            "_id": ObjectId("5b7325024a68c3f7a7bcb123"),
            "name": "g7pnd0yy2",
            "email": "afobv6jhf@c9e0o.lb0",
            "movie_id": ObjectId("573a13eff29313caabdd82f3"),
            "text": "fazzlebizzle",
            "date": datetime.datetime(2018, 8, 14, 14, 53, 11, 550000),
        },
    ],
    "q12": 779,
    "q13": [
        {
            "imdb": {"rating": 9.2},
            "year": 1972,
            "genres": ["Crime", "Drama"],
            "title": "The Godfather",
        },
        {
            "imdb": {"rating": 9.1},
            "year": 1974,
            "genres": ["Crime", "Drama"],
            "title": "The Godfather: Part II",
        },
        {
            "genres": ["Drama", "History"],
            "title": "I, Claudius",
            "year": 1976,
            "imdb": {"rating": 9},
        },
        {
            "genres": ["Documentary", "History"],
            "title": "Hollywood",
            "year": 1980,
            "imdb": {"rating": 9.1},
        },
        {
            "genres": ["Documentary"],
            "title": "Cosmos",
            "year": 1980,
            "imdb": {"rating": 9.3},
        },
        {
            "genres": ["Comedy", "Drama"],
            "title": "The Marathon Family",
            "year": 1982,
            "imdb": {"rating": 9},
        },
        {
            "genres": ["Drama"],
            "title": "The Decalogue",
            "year": 1989,
            "imdb": {"rating": 9.2},
        },
        {
            "genres": ["Comedy", "Drama", "Sci-Fi"],
            "title": "Heart of a Dog",
            "year": 1988,
            "imdb": {"rating": 9},
        },
        {
            "genres": ["Documentary", "History", "War"],
            "title": "The Civil War",
            "year": 1990,
            "imdb": {"rating": 9.4},
        },
        {
            "genres": ["Documentary", "History", "Sport"],
            "title": "Baseball",
            "year": 1994,
            "imdb": {"rating": 9.1},
        },
        {
            "imdb": {"rating": 9.3},
            "year": 1994,
            "genres": ["Crime", "Drama"],
            "title": "The Shawshank Redemption",
        },
        {
            "genres": ["Drama", "Romance"],
            "title": "Pride and Prejudice",
            "year": 1995,
            "imdb": {"rating": 9.1},
        },
        {
            "genres": ["Documentary", "Music"],
            "title": "Prerokbe Ognja",
            "year": 1996,
            "imdb": {"rating": 9},
        },
        {
            "genres": ["Documentary"],
            "title": "The Private Life of Plants",
            "year": "1995√®",
            "imdb": {"rating": 9},
        },
        {
            "genres": ["Action", "Drama", "History"],
            "title": "Band of Brothers",
            "year": 2001,
            "imdb": {"rating": 9.6},
        },
        {
            "imdb": {"rating": 9.3},
            "year": 1994,
            "genres": ["Crime", "Drama"],
            "title": "The Shawshank Redemption",
        },
        {
            "genres": ["Documentary", "History", "War"],
            "title": "The Civil War",
            "year": 1990,
            "imdb": {"rating": 9.4},
        },
        {
            "genres": ["Comedy"],
            "title": "The Chaos Class Failed the Class",
            "year": 1976,
            "imdb": {"rating": 9},
        },
        {
            "genres": ["Documentary"],
            "title": "The Blue Planet",
            "year": 2001,
            "imdb": {"rating": 9.2},
        },
        {
            "genres": ["Drama", "Romance"],
            "title": "North & South",
            "year": 2004,
            "imdb": {"rating": 9},
        },
        {
            "imdb": {"rating": 9},
            "year": 2008,
            "genres": ["Action", "Crime", "Drama"],
            "title": "The Dark Knight",
        },
        {
            "genres": ["Documentary"],
            "title": "Planet Earth",
            "year": 2006,
            "imdb": {"rating": 9.5},
        },
        {
            "genres": ["Animation", "Crime", "Drama"],
            "title": "Death Note",
            "year": "2006√®2007",
            "imdb": {"rating": 9},
        },
        {
            "genres": ["Documentary", "War"],
            "title": "The War",
            "year": 2007,
            "imdb": {"rating": 9},
        },
        {
            "genres": ["Documentary"],
            "title": "Nature's Most Amazing Events",
            "year": 2009,
            "imdb": {"rating": 9},
        },
        {
            "genres": ["Documentary"],
            "title": "Life",
            "year": 2009,
            "imdb": {"rating": 9.2},
        },
        {
            "genres": ["Documentary"],
            "title": "Human Planet",
            "year": 2011,
            "imdb": {"rating": 9.2},
        },
        {
            "genres": ["Documentary"],
            "title": "Frozen Planet",
            "year": 2011,
            "imdb": {"rating": 9.2},
        },
        {
            "genres": ["Documentary", "Action", "History"],
            "title": "The Real Miyagi",
            "year": 2015,
            "imdb": {"rating": 9.3},
        },
        {
            "genres": ["Animation", "Adventure", "Comedy"],
            "title": "Over the Garden Wall",
            "year": 2014,
            "imdb": {"rating": 9.2},
        },
        {
            "genres": ["Documentary", "Biography", "Family"],
            "title": "A Brave Heart: The Lizzie Velasquez Story",
            "year": 2015,
            "imdb": {"rating": 9.4},
        },
    ],
    "q14": 181,
    "q15": 296,
    "q16": 510,
    "q17": [
        "Alliser Thorne",
        "Amy Phillips",
        "Amy Ramirez",
        "Andrea Le",
        "Anthony Cline",
        "Anthony Hurst",
        "Anthony Smith",
        "Anthony Thompson",
        "April Cole",
        "Arya Stark",
        "Ashlee Hart",
        "Barbara Gonzalez",
        "Barristan Selmy",
        "Beric Dondarrion",
        "Blake Fitzgerald",
        "Blake Sellers",
        "Bowen Marsh",
        "Bradley Brooks",
        "Bran Stark",
        "Brandon Hardy",
        "Brenda Martin",
        "Brienne of Tarth",
        "Bronn",
        "Cameron Duran",
        "Catelyn Stark",
        "Catherine Romero",
        "Cersei Lannister",
        "Christian Williams",
        "Christopher Robinson",
        "Connie Barton",
        "Connie Johnson",
        "Daario Naharis",
        "Daenerys Targaryen",
        "Daniel Simmons",
        "Davos Seaworth",
        "Deborah Kennedy",
        "Denise Bryant",
        "Denise Davidson",
        "Desiree Pierce",
        "Donna Russell",
        "Donna Smith",
        "Doreah",
        "Eddison Tollett",
        "Edward Barrett",
        "Elizabeth Wiggins",
        "Ellaria Sand",
        "Emily Ellis",
        "Eric Navarro",
        "Garrett Obrien",
        "Gendry",
        "Gilly",
        "Grand Maester Pycelle",
        "Greg Powell",
        "Gregor Clegane",
        "Grenn",
        "Grey Worm",
        "Heather Leonard",
        "Hodor",
        "Hot Pie",
        "Irri",
        "Jaime Lannister",
        "Jamie Santana",
        "Janos Slynt",
        "Jaqen H'ghar",
        "Jason Hernandez",
        "Jason Smith",
        "Javier Smith",
        "Jeffrey Roberts",
        "Jennifer Frazier",
        "Jeor Mormont",
        "Jerry Cabrera",
        "Joffrey Baratheon",
        "John Bishop",
        "John Rice",
        "John Roman",
        "Jojen Reed",
        "Jon Snow",
        "Jonathon Mccullough",
        "Jorah Mormont",
        "Jordan Medina",
        "Jose Hall",
        "Joshua Kent",
        "Julia Nichols",
        "Justin Williams",
        "Karina Martin",
        "Kathryn Sosa",
        "Keith Phillips",
        "Kelsey Smith",
        "Kenneth Chandler",
        "Kevan Lannister",
        "Khal Drogo",
        "Kimberly Gates",
        "Kristen Schmidt",
        "Lancel Lannister",
        "Lisa Rasmussen",
        "Lisa Russo",
        "Lisa Silva",
        "Loras Tyrell",
        "Lori Blankenship",
        "Lori Franklin",
        "Mace Tyrell",
        "Maester Aemon",
        "Maester Luwin",
        "Margaery Tyrell",
        "Mary Mitchell",
        "Meera Reed",
        "Megan Richards",
        "Megan Turner",
        "Melisandre",
        "Melissa Jones",
        "Melissa Young",
        "Mercedes Tyler",
        "Meryn Trant",
        "Michael Day",
        "Michael Moore",
        "Missandei",
        "Morgan Smith",
        "Mrs. Ariana Nunez",
        "Ms. Cathy Miller",
        "Myrcella Baratheon",
        "Ned Stark",
        "Nicholas Johnson",
        "Nicholas Webster",
        "Nichole Miller",
        "Olenna Tyrell",
        "Olly",
        "Osha",
        "Othell Yarwyck",
        "Patricia Good",
        "Patrick Knight",
        "Paul Bailey",
        "Paula Sullivan",
        "Petyr Baelish",
        "Phillip Collins",
        "Podrick Payne",
        "Pypar",
        "Qyburn",
        "Ramsay Bolton",
        "Rast",
        "Richard Davis",
        "Richard Schmidt",
        "Rickon Stark",
        "Robb Stark",
        "Robert Baratheon",
        "Robert Jordan",
        "Rodrik Cassel",
        "Ronald Cox",
        "Roose Bolton",
        "Ros",
        "Samwell Tarly",
        "Sandor Clegane",
        "Sansa Stark",
        "Sarah Lewis",
        "Selyse Baratheon",
        "Shae",
        "Shawn Mccormick",
        "Shireen Baratheon",
        "Stannis Baratheon",
        "Talisa Maegyr",
        "Taylor Hill",
        "Taylor Scott",
        "Teresa Thomas",
        "The High Sparrow",
        "The Waif",
        "Theon Greyjoy",
        "Theresa Holmes",
        "Thomas Buckley",
        "Thomas Green",
        "Thomas Morris",
        "Thoros of Myr",
        "Tommen Baratheon",
        "Tormund Giantsbane",
        "Tyrion Lannister",
        "Tywin Lannister",
        "Varys",
        "Victor Fleming",
        "Victor Patel",
        "Victoria Sanders",
        "Viserys Targaryen",
        "Yara Greyjoy",
        "Ygritte",
        "Yolanda Owen",
        "Yvette Roth",
    ],
    "q18": [
        {
            "_id": ObjectId("5b71c2884a68c30929b2a9f1"),
            "name": "bbw6dadfe",
            "email": "7o9jvpos7@zmu2t.koi",
            "movie_id": ObjectId("573a13eff29313caabdd82f3"),
            "text": "fazzlebizzle",
            "date": datetime.datetime(2018, 8, 13, 13, 40, 29, 394000),
        },
        {
            "_id": ObjectId("5b71c8444a68c315a80b046a"),
            "name": "ztcviee3w",
            "email": "k5s0qzhgq@bura0.b9j",
            "movie_id": ObjectId("573a13eff29313caabdd82f3"),
            "text": "fazzlebizzle",
            "date": datetime.datetime(2018, 8, 13, 14, 4, 57, 526000),
        },
        {
            "_id": ObjectId("5b721c0020a32767b53b0ef0"),
            "name": "y5uve0uql",
            "email": "7ba24unv0@f93ng.s96",
            "movie_id": ObjectId("573a13eff29313caabdd82f3"),
            "text": "fazzlebizzle",
            "date": datetime.datetime(2018, 8, 13, 20, 2, 12, 67000),
        },
        {
            "_id": ObjectId("5b721c8820a32768c1dd5b97"),
            "name": "z49ahxnxe",
            "email": "7ypfpywp6@z618q.oc0",
            "movie_id": ObjectId("573a13eff29313caabdd82f3"),
            "text": "fazzlebizzle",
            "date": datetime.datetime(2018, 8, 13, 20, 4, 28, 72000),
        },
        {
            "_id": ObjectId("5b721d0820a3276a27f20a63"),
            "name": "e5ghwc58r",
            "email": "xqwefpikq@a1sr6.gli",
            "movie_id": ObjectId("573a13eff29313caabdd82f3"),
            "text": "fazzlebizzle",
            "date": datetime.datetime(2018, 8, 13, 20, 6, 36, 772000),
        },
        {
            "_id": ObjectId("5b721d6620a3276b101b7a77"),
            "name": "kovdob65w",
            "email": "2nv7oyemk@osyi4.36c",
            "movie_id": ObjectId("573a13eff29313caabdd82f3"),
            "text": "fazzlebizzle",
            "date": datetime.datetime(2018, 8, 13, 20, 8, 10, 715000),
        },
        {
            "_id": ObjectId("5b721e3f20a3276e7bee3fb2"),
            "name": "iukovzpo8",
            "email": "ligt6npo1@py07n.rxq",
            "movie_id": ObjectId("573a13eff29313caabdd82f3"),
            "text": "fazzlebizzle",
            "date": datetime.datetime(2018, 8, 13, 20, 11, 47, 125000),
        },
        {
            "_id": ObjectId("5b721eca20a3276fd6f4aa31"),
            "name": "ndr4563es",
            "email": "tf4lcqe2w@ray3l.8ab",
            "movie_id": ObjectId("573a13eff29313caabdd82f3"),
            "text": "fazzlebizzle",
            "date": datetime.datetime(2018, 8, 13, 20, 14, 7, 924000),
        },
        {
            "_id": ObjectId("5b72208d20a3277434e2b27a"),
            "name": "x79ado7jj",
            "email": "ebhazkbw1@r2cdu.ro7",
            "movie_id": ObjectId("573a13eff29313caabdd82f3"),
            "text": "fazzlebizzle",
            "date": datetime.datetime(2018, 8, 13, 20, 21, 37, 783000),
        },
        {
            "_id": ObjectId("5b72217e20a327770964f954"),
            "name": "foobar",
            "email": "foobar@baz.com",
            "movie_id": ObjectId("573a13eff29313caabdd82f3"),
            "text": "frobscottle",
            "date": datetime.datetime(2018, 8, 13, 20, 25, 34, 174000),
        },
        {
            "_id": ObjectId("5b72222620a32778af478899"),
            "name": "foobar",
            "email": "foobar@baz.com",
            "movie_id": ObjectId("573a13eff29313caabdd82f3"),
            "text": "fe-fi-fo-fum",
            "date": datetime.datetime(2018, 8, 13, 20, 28, 22, 651000),
        },
        {
            "_id": ObjectId("5b72223520a32778f62b36b9"),
            "name": "foobar",
            "email": "foobar@baz.com",
            "movie_id": ObjectId("573a13eff29313caabdd82f3"),
            "text": "fe-fi-fo-fum",
            "date": datetime.datetime(2018, 8, 13, 20, 28, 37, 711000),
        },
        {
            "_id": ObjectId("5b72227120a327796b08c128"),
            "name": "foobar",
            "email": "foobar@baz.com",
            "movie_id": ObjectId("573a13eff29313caabdd82f3"),
            "text": "fe-fi-fo-fum",
            "date": datetime.datetime(2018, 8, 13, 20, 29, 36, 938000),
        },
        {
            "_id": ObjectId("5b72fa194a68c3b3bd1fe4f7"),
            "name": "xw3rnviyk",
            "email": "ybv63kgc9@znxcr.nks",
            "movie_id": ObjectId("573a13eff29313caabdd82f3"),
            "text": "fazzlebizzle",
            "date": datetime.datetime(2018, 8, 14, 11, 49, 50, 688000),
        },
        {
            "_id": ObjectId("5b7307fb4a68c3b3bd1fe554"),
            "name": "tina71wss",
            "email": "o1osvehnm@atmkt.3rn",
            "movie_id": ObjectId("573a13eff29313caabdd82f3"),
            "text": "fazzlebizzle",
            "date": datetime.datetime(2018, 8, 14, 12, 49, 3, 337000),
        },
        {
            "_id": ObjectId("5b7309484a68c3b3bd1fe592"),
            "name": "pj4hemog2",
            "email": "pjir4n1hv@pv1ms.xsb",
            "movie_id": ObjectId("573a13eff29313caabdd82f3"),
            "text": "fazzlebizzle",
            "date": datetime.datetime(2018, 8, 14, 12, 54, 44, 412000),
        },
        {
            "_id": ObjectId("5b7309ac4a68c3b3bd1fe5e5"),
            "name": "fqlgxyhy4",
            "email": "tsida45ce@fsws7.i22",
            "movie_id": ObjectId("573a13eff29313caabdd82f3"),
            "text": "fazzlebizzle",
            "date": datetime.datetime(2018, 8, 14, 12, 56, 16, 391000),
        },
        {
            "_id": ObjectId("5b730bed4a68c3b3bd1fe614"),
            "name": "jol9d6ze3",
            "email": "0ylr0b0l4@98ply.r39",
            "movie_id": ObjectId("573a13eff29313caabdd82f3"),
            "text": "fazzlebizzle",
            "date": datetime.datetime(2018, 8, 14, 13, 5, 54, 636000),
        },
        {
            "_id": ObjectId("5b730ca74a68c3b3bd1fe6b2"),
            "name": "b1k7xex8r",
            "email": "2f6vkgwxs@i3i8s.lau",
            "movie_id": ObjectId("573a13eff29313caabdd82f3"),
            "text": "fazzlebizzle",
            "date": datetime.datetime(2018, 8, 14, 13, 9, 0, 120000),
        },
        {
            "_id": ObjectId("5b730ea64a68c3b3bd1fe70e"),
            "name": "gwy1uyx6i",
            "email": "3cplcn49o@rr7vj.n3k",
            "movie_id": ObjectId("573a13eff29313caabdd82f3"),
            "text": "fazzlebizzle",
            "date": datetime.datetime(2018, 8, 14, 13, 17, 29, 958000),
        },
        {
            "_id": ObjectId("5b7310694a68c3e6c7746df9"),
            "name": "7ny89nwrm",
            "email": "zo15kcou8@hwcz4.xo7",
            "movie_id": ObjectId("573a13eff29313caabdd82f3"),
            "text": "fazzlebizzle",
            "date": datetime.datetime(2018, 8, 14, 13, 25, 0, 622000),
        },
        {
            "_id": ObjectId("5b731ace4a68c3f7a7bcaf65"),
            "name": "gwog3g40h",
            "email": "azx9b7vxs@h83kk.uvb",
            "movie_id": ObjectId("573a13eff29313caabdd82f3"),
            "text": "fazzlebizzle",
            "date": datetime.datetime(2018, 8, 14, 14, 9, 26, 546000),
        },
        {
            "_id": ObjectId("5b731b914a68c3f7a7bcaf93"),
            "name": "otagytcbw",
            "email": "4k3i0kq8d@d97xm.e20",
            "movie_id": ObjectId("573a13eff29313caabdd82f3"),
            "text": "fazzlebizzle",
            "date": datetime.datetime(2018, 8, 14, 14, 12, 44, 608000),
        },
        {
            "_id": ObjectId("5b73221a4a68c3f7a7bcb0f6"),
            "name": "tm7gih7w8",
            "email": "iyt39oj0c@uiy6j.vit",
            "movie_id": ObjectId("573a13eff29313caabdd82f3"),
            "text": "fazzlebizzle",
            "date": datetime.datetime(2018, 8, 14, 14, 40, 35, 400000),
        },
        {
            "_id": ObjectId("5b7325024a68c3f7a7bcb123"),
            "name": "g7pnd0yy2",
            "email": "afobv6jhf@c9e0o.lb0",
            "movie_id": ObjectId("573a13eff29313caabdd82f3"),
            "text": "fazzlebizzle",
            "date": datetime.datetime(2018, 8, 14, 14, 53, 11, 550000),
        },
        {
            "_id": ObjectId("5b7326bd4a68c3f7a7bcb15f"),
            "name": "sg1u6swo4",
            "email": "gs4jr54ar@6gvpw.ok0",
            "movie_id": ObjectId("573a13eff29313caabdd82f3"),
            "text": "fazzlebizzle",
            "date": datetime.datetime(2018, 8, 14, 15, 0, 25, 211000),
        },
        {
            "_id": ObjectId("5b7326fd4a68c3f7a7bcb188"),
            "name": "yznjm1yul",
            "email": "rio72go4u@wztfh.ep0",
            "movie_id": ObjectId("573a13eff29313caabdd82f3"),
            "text": "feefee",
            "date": datetime.datetime(2018, 8, 14, 15, 1, 16, 716000),
        },
        {
            "_id": ObjectId("5b7327724a68c3f7a7bcb1ae"),
            "name": "jjjdmntww",
            "email": "h90xxa9b0@gn3q7.7th",
            "movie_id": ObjectId("573a13eff29313caabdd82f3"),
            "text": "feefee",
            "date": datetime.datetime(2018, 8, 14, 15, 3, 14, 306000),
        },
        {
            "_id": ObjectId("5b7327c34a68c3f7a7bcb1d3"),
            "name": "sxkybvzb6",
            "email": "vtz4prjvb@g622o.1yk",
            "movie_id": ObjectId("573a13eff29313caabdd82f3"),
            "text": "fazzlebizzle",
            "date": datetime.datetime(2018, 8, 14, 15, 5, 3, 142000),
        },
    ],
    "q19": 1269,
    "q20": [
        {
            "title": "A Brave Heart: The Lizzie Velasquez Story",
            "released": datetime.datetime(2015, 9, 25, 0, 0),
            "imdb": {"rating": 9.4},
        },
        {
            "title": "The Real Miyagi",
            "released": datetime.datetime(2015, 2, 20, 0, 0),
            "imdb": {"rating": 9.3},
        },
        {
            "title": "Over the Garden Wall",
            "released": datetime.datetime(2014, 11, 3, 0, 0),
            "imdb": {"rating": 9.2},
        },
        {
            "title": "Frozen Planet",
            "released": datetime.datetime(2012, 3, 18, 0, 0),
            "imdb": {"rating": 9.2},
        },
        {
            "title": "Human Planet",
            "released": datetime.datetime(2011, 1, 13, 0, 0),
            "imdb": {"rating": 9.2},
        },
        {
            "title": "Life",
            "released": datetime.datetime(2009, 10, 12, 0, 0),
            "imdb": {"rating": 9.2},
        },
        {
            "title": "Planet Earth",
            "released": datetime.datetime(2007, 3, 25, 0, 0),
            "imdb": {"rating": 9.5},
        },
        {
            "title": "The Blue Planet",
            "released": datetime.datetime(2002, 1, 27, 0, 0),
            "imdb": {"rating": 9.2},
        },
        {
            "title": "Band of Brothers",
            "released": datetime.datetime(2001, 9, 9, 0, 0),
            "imdb": {"rating": 9.6},
        },
        {
            "title": "Pride and Prejudice",
            "released": datetime.datetime(1996, 1, 14, 0, 0),
            "imdb": {"rating": 9.1},
        },
    ],
    "q21": 16090,
    "q22": 4477,
    "q23": [{"average_rating": 6.38}],
    "q24": [
        {"_id": "Mace Tyrell", "total_comments": 331},
        {"_id": "Missandei", "total_comments": 327},
        {"_id": "The High Sparrow", "total_comments": 315},
        {"_id": "Sansa Stark", "total_comments": 308},
        {"_id": "Rodrik Cassel", "total_comments": 305},
    ],
    "q25": [
        {"_id": ObjectId("573a13bff29313caabd5e91e"), "total_comments": 161},
        {"_id": ObjectId("573a13abf29313caabd25582"), "total_comments": 158},
        {"_id": ObjectId("573a13a5f29313caabd159a9"), "total_comments": 158},
        {"_id": ObjectId("573a13a3f29313caabd0d1e3"), "total_comments": 158},
        {"_id": ObjectId("573a13b3f29313caabd3b647"), "total_comments": 158},
    ],
    "q26": [{"average_runtime": 103.05}],
    "q27": [
        {"_id": "Woody Allen", "count": 40},
        {"_id": "John Ford", "count": 35},
        {"_id": "John Huston", "count": 34},
    ],
    "q28": [
        {"email": "roger_ashton-griffiths@gameofthron.es", "comment_count": 331},
        {"email": "nathalie_emmanuel@gameofthron.es", "comment_count": 327},
        {"email": "jonathan_pryce@gameofthron.es", "comment_count": 315},
        {"email": "sophie_turner@gameofthron.es", "comment_count": 308},
        {"email": "ron_donachie@gameofthron.es", "comment_count": 305},
    ],
    "q29": [
        {"_id": "Film-Noir", "average_rating": 7.5},
        {"_id": "Documentary", "average_rating": 7.37},
        {"_id": "Short", "average_rating": 7.36},
        {"_id": "News", "average_rating": 7.25},
        {"_id": "History", "average_rating": 7.2},
    ],
    "q30": [
        {"_id": "Alliser Thorne"},
        {"_id": "Amy Phillips"},
        {"_id": "Amy Ramirez"},
        {"_id": "Andrea Le"},
        {"_id": "Anthony Cline"},
        {"_id": "Anthony Hurst"},
        {"_id": "Anthony Smith"},
        {"_id": "Anthony Thompson"},
        {"_id": "April Cole"},
        {"_id": "Arya Stark"},
        {"_id": "Ashlee Hart"},
        {"_id": "Barbara Gonzalez"},
        {"_id": "Barristan Selmy"},
        {"_id": "Beric Dondarrion"},
        {"_id": "Blake Fitzgerald"},
        {"_id": "Blake Sellers"},
        {"_id": "Bowen Marsh"},
        {"_id": "Bradley Brooks"},
        {"_id": "Bran Stark"},
        {"_id": "Brandon Hardy"},
        {"_id": "Brenda Martin"},
        {"_id": "Brienne of Tarth"},
        {"_id": "Bronn"},
        {"_id": "Cameron Duran"},
        {"_id": "Catelyn Stark"},
        {"_id": "Catherine Romero"},
        {"_id": "Cersei Lannister"},
        {"_id": "Christian Williams"},
        {"_id": "Christopher Robinson"},
        {"_id": "Connie Barton"},
        {"_id": "Connie Johnson"},
        {"_id": "Daario Naharis"},
        {"_id": "Daenerys Targaryen"},
        {"_id": "Daniel Simmons"},
        {"_id": "Davos Seaworth"},
        {"_id": "Deborah Kennedy"},
        {"_id": "Denise Bryant"},
        {"_id": "Denise Davidson"},
        {"_id": "Desiree Pierce"},
        {"_id": "Donna Russell"},
        {"_id": "Donna Smith"},
        {"_id": "Doreah"},
        {"_id": "Eddison Tollett"},
        {"_id": "Edward Barrett"},
        {"_id": "Elizabeth Wiggins"},
        {"_id": "Ellaria Sand"},
        {"_id": "Emily Ellis"},
        {"_id": "Eric Navarro"},
        {"_id": "Garrett Obrien"},
        {"_id": "Gendry"},
        {"_id": "Gilly"},
        {"_id": "Grand Maester Pycelle"},
        {"_id": "Greg Powell"},
        {"_id": "Gregor Clegane"},
        {"_id": "Grenn"},
        {"_id": "Grey Worm"},
        {"_id": "Heather Leonard"},
        {"_id": "Hodor"},
        {"_id": "Hot Pie"},
        {"_id": "Irri"},
        {"_id": "Jaime Lannister"},
        {"_id": "Jamie Santana"},
        {"_id": "Janos Slynt"},
        {"_id": "Jaqen H'ghar"},
        {"_id": "Jason Hernandez"},
        {"_id": "Jason Smith"},
        {"_id": "Javier Smith"},
        {"_id": "Jeffrey Roberts"},
        {"_id": "Jennifer Frazier"},
        {"_id": "Jeor Mormont"},
        {"_id": "Jerry Cabrera"},
        {"_id": "Joffrey Baratheon"},
        {"_id": "John Bishop"},
        {"_id": "John Rice"},
        {"_id": "John Roman"},
        {"_id": "Jojen Reed"},
        {"_id": "Jon Snow"},
        {"_id": "Jonathon Mccullough"},
        {"_id": "Jorah Mormont"},
        {"_id": "Jordan Medina"},
        {"_id": "Jose Hall"},
        {"_id": "Joshua Kent"},
        {"_id": "Julia Nichols"},
        {"_id": "Justin Williams"},
        {"_id": "Karina Martin"},
        {"_id": "Kathryn Sosa"},
        {"_id": "Keith Phillips"},
        {"_id": "Kelsey Smith"},
        {"_id": "Kenneth Chandler"},
        {"_id": "Kevan Lannister"},
        {"_id": "Khal Drogo"},
        {"_id": "Kimberly Gates"},
        {"_id": "Kristen Schmidt"},
        {"_id": "Lancel Lannister"},
        {"_id": "Lisa Rasmussen"},
        {"_id": "Lisa Russo"},
        {"_id": "Lisa Silva"},
        {"_id": "Loras Tyrell"},
        {"_id": "Lori Blankenship"},
        {"_id": "Lori Franklin"},
        {"_id": "Mace Tyrell"},
        {"_id": "Maester Aemon"},
        {"_id": "Maester Luwin"},
        {"_id": "Margaery Tyrell"},
        {"_id": "Mary Mitchell"},
        {"_id": "Meera Reed"},
        {"_id": "Megan Richards"},
        {"_id": "Megan Turner"},
        {"_id": "Melisandre"},
        {"_id": "Melissa Jones"},
        {"_id": "Melissa Young"},
        {"_id": "Mercedes Tyler"},
        {"_id": "Meryn Trant"},
        {"_id": "Michael Day"},
        {"_id": "Michael Moore"},
        {"_id": "Missandei"},
        {"_id": "Morgan Smith"},
        {"_id": "Mrs. Ariana Nunez"},
        {"_id": "Ms. Cathy Miller"},
        {"_id": "Myrcella Baratheon"},
        {"_id": "Ned Stark"},
        {"_id": "Nicholas Johnson"},
        {"_id": "Nicholas Webster"},
        {"_id": "Nichole Miller"},
        {"_id": "Olenna Tyrell"},
        {"_id": "Olly"},
        {"_id": "Osha"},
        {"_id": "Othell Yarwyck"},
        {"_id": "Patricia Good"},
        {"_id": "Patrick Knight"},
        {"_id": "Paul Bailey"},
        {"_id": "Paula Sullivan"},
        {"_id": "Petyr Baelish"},
        {"_id": "Phillip Collins"},
        {"_id": "Podrick Payne"},
        {"_id": "Pypar"},
        {"_id": "Qyburn"},
        {"_id": "Ramsay Bolton"},
        {"_id": "Rast"},
        {"_id": "Richard Davis"},
        {"_id": "Richard Schmidt"},
        {"_id": "Rickon Stark"},
        {"_id": "Robb Stark"},
        {"_id": "Robert Baratheon"},
        {"_id": "Robert Jordan"},
        {"_id": "Rodrik Cassel"},
        {"_id": "Ronald Cox"},
        {"_id": "Roose Bolton"},
        {"_id": "Ros"},
        {"_id": "Samwell Tarly"},
        {"_id": "Sandor Clegane"},
        {"_id": "Sansa Stark"},
        {"_id": "Sarah Lewis"},
        {"_id": "Selyse Baratheon"},
        {"_id": "Shae"},
        {"_id": "Shawn Mccormick"},
        {"_id": "Shireen Baratheon"},
        {"_id": "Stannis Baratheon"},
        {"_id": "Talisa Maegyr"},
        {"_id": "Taylor Hill"},
        {"_id": "Taylor Scott"},
        {"_id": "Teresa Thomas"},
        {"_id": "The High Sparrow"},
        {"_id": "The Waif"},
        {"_id": "Theon Greyjoy"},
        {"_id": "Theresa Holmes"},
        {"_id": "Thomas Buckley"},
        {"_id": "Thomas Green"},
        {"_id": "Thomas Morris"},
        {"_id": "Thoros of Myr"},
        {"_id": "Tommen Baratheon"},
        {"_id": "Tormund Giantsbane"},
        {"_id": "Tyrion Lannister"},
        {"_id": "Tywin Lannister"},
        {"_id": "Varys"},
        {"_id": "Victor Fleming"},
        {"_id": "Victor Patel"},
        {"_id": "Victoria Sanders"},
        {"_id": "Viserys Targaryen"},
        {"_id": "Yara Greyjoy"},
        {"_id": "Ygritte"},
        {"_id": "Yolanda Owen"},
        {"_id": "Yvette Roth"},
    ],
    "q31": [{"_id": "Mace Tyrell", "unique_movies": 270}],
}

SOLUTIONS_DIR = "answers"
NOTEBOOK_NAME = "p2.ipynb"

# Question categories
exact_match_questions = [
    3,
    10,
    11,
    17,
    20,
    23,
    24,
    25,
    26,
    27,
    28,
    29,
    30,
    31,
]  # Exact matches (data and order)
unordered_match_questions = [1, 2, 4, 13, 18]  # Data matches, order doesn't matter
numeric_match_questions = [
    5,
    6,
    7,
    8,
    9,
    12,
    14,
    15,
    16,
    19,
    21,
    22,
]  # Numeric comparisons
geojson_image_questions = [32, 33, 34]  # Geospatial plot image checks

# Grading weights
weights = {i: 0.1 for i in range(1, 35)}  # Q1-Q20: 0.1 points each
weights.update({i: 0.2 for i in range(21, 26)})  # Q21-Q25 (0.2 each)
weights.update({i: 0.3 for i in range(26, 32)})  # Q26-Q31 (0.3 each)
weights.update({32: 0.4, 33: 0.4, 34: 0.4})  # GeoJSON questions have highest weight

# Track total score
test_scores = {}


def get_code_cells(notebook):
    """Extract all code cells from the Jupyter notebook."""
    return [cell["source"] for cell in notebook.cells if cell["cell_type"] == "code"]


@pytest.fixture
def load_notebook():
    """Load the Jupyter notebook and return the code cells."""
    with open(NOTEBOOK_NAME, "r", encoding="utf-8") as f:
        notebook = nbformat.read(f, as_version=4)
    return get_code_cells(notebook)


def test_unzip_usage(load_notebook):
    """Check that unzip was used to download and extract the sample_mflix dataset."""
    notebook_code = "\n".join(load_notebook)
    pattern = r"!\s*unzip"
    assert re.search(
        pattern, notebook_code
    ), "unzip command to extract the dataset not found."


def test_imports(load_notebook):
    """Check that the required modules are imported."""
    notebook_code = "\n".join(load_notebook)
    required_imports = [
        "os",
        "pymongo",
        "bson",
        "datetime",
        "pickle",
    ]
    for imp in required_imports:
        assert imp in notebook_code, f"Required import '{imp}' not found."


def test_mongodb_connection(load_notebook):
    """Check that the student connected to MongoDB using MongoClient."""
    notebook_code = "\n".join(load_notebook)
    assert (
        "MongoClient('mongodb://" in notebook_code
    ), "MongoClient connection string not found."


def test_load_files_to_mongo(load_notebook):
    """Check that files in the sample_mflix directory were loaded into MongoDB."""
    notebook_code = "\n".join(load_notebook)
    assert (
        "listdir" in notebook_code
    ), "os.listdir usage to list sample_mflix files not found."
    "json_util.loads" in notebook_code or "json_util" in notebook_code, "bson.json_util.loads usage to load JSON data not found."


def test_question_comments(load_notebook):
    """Check that there are cells starting with '#qN' where N is the question number."""
    # Combine all code cells into one text block
    notebook_code = "\n".join(load_notebook)

    # Iterate through question numbers from 1 to 34
    for i in range(1, 35):
        question_comment_variants = [
            f"#q{i}",  # "#q1"
            f"# q{i}",  # "# q1"
            f"#Q{i}",  # "#q1"
            f"# Q{i}",  # "# q1"
        ]
        assert any(
            variant in notebook_code for variant in question_comment_variants
        ), f"Comment '#q{i}' not found in the notebook."


def load_pickle(file_path):
    """Load a pickle file"""
    try:
        with open(file_path, "rb") as file:
            return pickle.load(file)
    except (FileNotFoundError, pickle.UnpicklingError):
        return None


def compare_numeric(val_student, val_solution, tolerance=0.001):
    """Compares numeric values with an optional tolerance for small differences."""
    return abs(val_student - val_solution) < tolerance


@pytest.mark.parametrize("question", numeric_match_questions)
def test_numeric_match(question):
    student_answer = load_pickle(f"{SOLUTIONS_DIR}/q{question}.pkl")
    solution = expected_results[f"q{question}"]
    assert (
        student_answer is not None
    ), f"Question {question}: No student submission found."
    assert solution is not None, f"Question {question}: No solution found."
    assert compare_numeric(
        student_answer, solution
    ), f"Question {question}: Value match failed."

    test_scores[question] = weights[question]  # If the test passes, add points


def flatten_dict(d):
    """Recursively flattens a dictionary into a sorted tuple of key-value pairs."""
    flat_items = []
    for key, value in sorted(d.items()):
        if isinstance(value, dict):
            # Recursively flatten the nested dictionary
            flat_items.append((key, tuple(flatten_dict(value))))
        else:
            flat_items.append((key, value))
    return flat_items


def compare_lists(list_student, list_solution, order_matters=True):
    """Compares two lists, order can either matter or not."""
    if order_matters:
        return list_student == list_solution
    else:
        return sorted(list_student) == sorted(list_solution)


def compare_list_of_dicts(list_student, list_solution, order_matters=True):
    """Compares two lists of dictionaries."""
    if not order_matters:
        list_student = sorted([flatten_dict(d) for d in list_student])
        list_solution = sorted([flatten_dict(d) for d in list_solution])
    return list_student == list_solution


def compare_dicts(dict_student, dict_solution):
    """Compares two dictionaries."""
    return dict_student == dict_solution


@pytest.mark.parametrize("question", unordered_match_questions)
def test_unordered_match(question):
    student_answer = load_pickle(f"{SOLUTIONS_DIR}/q{question}.pkl")
    solution = expected_results[f"q{question}"]
    assert (
        student_answer is not None
    ), f"Question {question}: No student submission found."
    assert solution is not None, f"Question {question}: No solution found."

    if isinstance(student_answer, list) and isinstance(solution, list):
        assert len(student_answer) == len(
            student_answer
        ), f"Question {question}: Length mismatch."
        if all(isinstance(item, dict) for item in student_answer) and all(
            isinstance(item, dict) for item in solution
        ):
            assert compare_list_of_dicts(
                student_answer, solution, order_matters=False
            ), f"Question {question}: Unordered match for list of dicts failed."
        else:
            assert compare_lists(
                student_answer, solution, order_matters=False
            ), f"Question {question}: Unordered match for lists failed."
    else:
        assert compare_dicts(
            student_answer, solution
        ), f"Question {question}: Unordered match for dicts failed."

    test_scores[question] = weights[question]  # If the test passes, add points


@pytest.mark.parametrize("question", exact_match_questions)
def test_exact_match(question):
    student_answer = load_pickle(f"{SOLUTIONS_DIR}/q{question}.pkl")
    solution = expected_results[f"q{question}"]
    assert (
        student_answer is not None
    ), f"Question {question}: No student submission found."
    assert solution is not None, f"Question {question}: No solution found."

    # Check if answer is a list, list of dicts, or dict and compare appropriately
    if isinstance(student_answer, list) and isinstance(solution, list):
        assert len(student_answer) == len(
            student_answer
        ), f"Question {question}: Length mismatch."
        if all(isinstance(item, dict) for item in student_answer) and all(
            isinstance(item, dict) for item in solution
        ):
            assert compare_list_of_dicts(
                student_answer, solution, order_matters=True
            ), f"Question {question}: Exact match for list of dicts failed."
        else:
            assert compare_lists(
                student_answer, solution, order_matters=True
            ), f"Question {question}: Exact match for lists failed."
    elif isinstance(student_answer, dict) and isinstance(solution, dict):
        assert compare_dicts(
            student_answer, solution
        ), f"Question {question}: Exact match for dicts failed."

    test_scores[question] = weights[question]  # If the test passes, add points


@pytest.mark.parametrize("question", geojson_image_questions)
def test_image_questions_exist(question):
    student_image_path = f"q{question}.png"
    assert Path(student_image_path).exists(), f"Question {question}: Image not found."

    test_scores[question] = weights[question]  # If the test passes, add points
